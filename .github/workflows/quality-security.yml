name: Quality Gates & Security

on:
  pull_request:
    branches: [master, develop]
  push:
    branches: [master, develop]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: '23.9.0'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run linting
        run: yarn lint

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Run tests (if they exist)
        run: |
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            yarn test
          else
            echo "No tests found, skipping..."
          fi

      - name: Build application
        run: yarn build

      - name: Check bundle size
        run: |
          if [ -d ".next" ]; then
            du -sh .next
            echo "Build successful - checking for large files..."
            find .next -size +1M -type f || true
          fi

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Run security audit with npm/yarn
        run: |
          echo "Running security audit..."
          yarn audit --level moderate || echo "Audit completed with warnings"

      - name: Check for known vulnerabilities in dependencies
        run: |
          # Install and run audit-ci for more detailed security checking
          npx audit-ci --config .audit-ci.json || echo "Security check completed"

      - name: Run npm audit
        run: |
          if [ -f "package-lock.json" ]; then
            npm audit --audit-level=high
          else
            echo "Using Yarn - checking with yarn audit"
            yarn audit --level high || echo "Yarn audit completed with warnings"
          fi

  dockerfile-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        with:
          dockerfile: Dockerfile
          format: sarif
          output-file: hadolint-results.sarif
          no-color: true

      - name: Upload Hadolint scan results
        uses: github/codeql-action/upload-sarif@662472033e021d55d94146f66f6058822b0b39fd # v3.27.0
        if: always()
        with:
          sarif_file: hadolint-results.sarif