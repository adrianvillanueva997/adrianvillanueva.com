direction: right

Devices: {
  label: "Devices"
  style: {fill: "#d1e9ff"; stroke: "#4a90e2"}
  ESP32: "📟 ESP32 Devices (S3, OLED, CAM)"
}

Ingestion: {
  label: "Ingestion Layer"
  style: {fill: "#dfffe0"; stroke: "#34a853"}
  MQTT: "📡 MQTT Broker"
  Middleware: "⚙️ Middleware Service (Redis + OTEL export)"
}

Bus: {
  label: "Message Bus"
  style: {fill: "#ffe6cc"; stroke: "#f57c00"}
  RabbitMQ: "🐇 RabbitMQ"
}

Services: {
  label: "Services"
  style: {fill: "#f3e8ff"; stroke: "#8e24aa"}
  OTA: "🔄 OTA Server (Axum) + Redis"
  ModelServer: "🧠 Model Server (MLflow REST API or custom)"
  Workers: "👷 Consumers / Workers"
}

Storage: {
  label: "Storage"
  style: {fill: "#e0e0e0"; stroke: "#616161"}
  DB: "🗄️ TimescaleDB or PostgreSQL"
}

Observability: {
  label: "Observability"
  style: {fill: "#fff9c4"; stroke: "#fbc02d"}
  OTEL: "🔍 OTEL Collector"
  Prometheus: "📊 Prometheus"
  Tempo: "⏱️ Tempo"
  Loki: "📝 Loki"
  Grafana: "📈 Grafana"
}

Devices.ESP32 -> Ingestion.MQTT
Ingestion.MQTT -> Ingestion.Middleware
Ingestion.Middleware -> Bus.RabbitMQ
Ingestion.Middleware -> Observability.OTEL
Devices.ESP32 -> Services.OTA
Services.OTA -> Storage.DB
Services.ModelServer -> Services.OTA
Bus.RabbitMQ -> Services.Workers
Services.Workers -> Storage.DB
Services.Workers -> Observability.OTEL
Observability.OTEL -> Observability.Prometheus
Observability.OTEL -> Observability.Tempo
Observability.OTEL -> Observability.Loki
Observability.Prometheus -> Observability.Grafana
Observability.Tempo -> Observability.Grafana
Observability.Loki -> Observability.Grafana
