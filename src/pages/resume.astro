---
import { readFileSync } from 'fs';
import { join } from 'path';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';

// Define types for the resume data
interface ResumeData {
    personal: {
        name: string;
        title: string;
        nationality: string;
        location: string;
        summary: string;
        email: string;
    };
    experience: Array<{
        company: string;
        position: string;
        location: string;
        startDate: string;
        endDate: string;
        highlights: string[];
    }>;
    education: Array<{
        institution: string;
        degree: string;
        location: string;
        startDate: string;
        endDate: string;
    }>;
    skills: Record<string, string[]>;
    languages: Array<{
        name: string;
        level: string;
    }>;
}

// Read and parse the resume YAML file
const resumePath = join(process.cwd(), 'src/data/resume.yaml');
const resumeContent = readFileSync(resumePath, 'utf8');
const { load } = await import('js-yaml');
const resume = load(resumeContent) as ResumeData;
---

<!doctype html>
<html lang="en">
    <head>
        <BaseHead
            title={`Resume - ${SITE_TITLE}`}
            description={SITE_DESCRIPTION}
        />
    </head>
    <body>
        <Header />
        <main class="container">
            <!-- Hero Section -->
            <section class="hero-section">
                <div class="hero-content">
                    <h1 class="hero-title">{resume.personal.name}</h1>
                    <p class="hero-subtitle">{resume.personal.title}</p>
                    <div class="hero-location">
                        <span>{resume.personal.location}</span>
                        <span class="separator">•</span>
                        <span>{resume.personal.nationality}</span>
                    </div>
                    <p class="hero-summary">{resume.personal.summary}</p>
                    <a
                        href={`mailto:${resume.personal.email}`}
                        class="btn-primary"
                    >
                        Contact Me
                    </a>
                </div>
            </section>

            <!-- Experience Section -->
            <section class="resume-section">
                <h2 class="section-title">Experience</h2>
                <div class="experience-grid">
                    {
                        resume.experience.map((job: any) => (
                            <article class="experience-card">
                                <div class="experience-header">
                                    <h3 class="company-name">{job.company}</h3>
                                    <div class="job-meta">
                                        <span class="position">
                                            {job.position}
                                        </span>
                                        <span class="location">
                                            {job.location}
                                        </span>
                                        <span class="duration">
                                            {job.startDate} - {job.endDate}
                                        </span>
                                    </div>
                                </div>
                                <ul class="highlights-list">
                                    {job.highlights.map((highlight: string) => (
                                        <li>{highlight}</li>
                                    ))}
                                </ul>
                            </article>
                        ))
                    }
                </div>
            </section>

            <!-- Education Section -->
            <section class="resume-section">
                <h2 class="section-title">Education</h2>
                <div class="education-grid">
                    {
                        resume.education.map((edu: any) => (
                            <article class="education-card">
                                <h3 class="institution">{edu.institution}</h3>
                                <div class="education-meta">
                                    <span class="degree">{edu.degree}</span>
                                    <span class="location">{edu.location}</span>
                                    <span class="duration">
                                        {edu.startDate} - {edu.endDate}
                                    </span>
                                </div>
                            </article>
                        ))
                    }
                </div>
            </section>

            <!-- Skills Section -->
            <section class="resume-section">
                <h2 class="section-title">Technical Skills</h2>
                <div class="skills-grid">
                    {
                        Object.entries(resume.skills).map(
                            ([category, skills]: [string, any]) => (
                                <div class="skill-category">
                                    <h3 class="skill-category-title">
                                        {category.charAt(0).toUpperCase() +
                                            category.slice(1)}
                                    </h3>
                                    <div class="skill-tags">
                                        {skills.map((skill: string) => (
                                            <span class="skill-tag">
                                                {skill}
                                            </span>
                                        ))}
                                    </div>
                                </div>
                            )
                        )
                    }
                </div>
            </section>

            <!-- Languages Section -->
            <section class="resume-section">
                <h2 class="section-title">Languages</h2>
                <div class="languages-grid">
                    {
                        resume.languages.map((lang: any) => (
                            <div class="language-item">
                                <span class="language-name">{lang.name}</span>
                                <span class="language-level">{lang.level}</span>
                            </div>
                        ))
                    }
                </div>
            </section>
        </main>
        <Footer />
    </body>
</html>

<style>
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .hero-section {
        margin-bottom: 4rem;
        text-align: center;
        border-bottom: 2px solid var(--border-color);
        padding-bottom: 3rem;
    }

    .hero-title {
        font-family: 'Orbitron', monospace;
        font-size: 3rem;
        font-weight: 900;
        margin-bottom: 1rem;
        background: linear-gradient(
            135deg,
            var(--accent-cyan),
            var(--text-primary)
        );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .hero-subtitle {
        font-size: 1.5rem;
        color: var(--accent-cyan);
        margin-bottom: 1rem;
        font-weight: 600;
    }

    .hero-location {
        font-size: 1.1rem;
        color: var(--text-secondary);
        margin-bottom: 2rem;
    }

    .separator {
        margin: 0 1rem;
        color: var(--accent-crimson);
    }

    .hero-summary {
        font-size: 1.1rem;
        line-height: 1.6;
        max-width: 800px;
        margin: 0 auto 2rem;
        color: var(--text-secondary);
    }

    .resume-section {
        margin-bottom: 4rem;
    }

    .section-title {
        font-family: 'Orbitron', monospace;
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 2rem;
        color: var(--accent-cyan);
        border-left: 4px solid var(--accent-crimson);
        padding-left: 1rem;
    }

    .experience-grid {
        display: grid;
        gap: 2rem;
    }

    .experience-card {
        background: var(--surface-color);
        border: 2px solid var(--border-color);
        padding: 2rem;
        border-radius: 4px;
        transition: all 0.3s ease;
    }

    .experience-card:hover {
        border-color: var(--accent-cyan);
        box-shadow: 0 4px 20px rgba(0, 255, 255, 0.1);
    }

    .experience-header {
        margin-bottom: 1.5rem;
    }

    .company-name {
        font-family: 'Orbitron', monospace;
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 0.5rem;
    }

    .job-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        font-size: 0.9rem;
        color: var(--text-secondary);
    }

    .position {
        color: var(--accent-cyan);
        font-weight: 600;
    }

    .duration {
        color: var(--accent-crimson);
        font-weight: 500;
    }

    .highlights-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .highlights-list li {
        position: relative;
        padding-left: 1.5rem;
        margin-bottom: 0.75rem;
        line-height: 1.5;
        color: var(--text-secondary);
    }

    .highlights-list li::before {
        content: '▶';
        position: absolute;
        left: 0;
        color: var(--accent-cyan);
        font-size: 0.8rem;
    }

    .education-grid,
    .languages-grid {
        display: grid;
        gap: 1.5rem;
    }

    .education-card {
        background: var(--surface-color);
        border: 2px solid var(--border-color);
        padding: 1.5rem;
        border-radius: 4px;
        transition: all 0.3s ease;
    }

    .education-card:hover {
        border-color: var(--accent-cyan);
    }

    .institution {
        font-family: 'Orbitron', monospace;
        font-size: 1.3rem;
        color: var(--text-primary);
        margin-bottom: 0.5rem;
    }

    .education-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        font-size: 0.9rem;
        color: var(--text-secondary);
    }

    .degree {
        color: var(--accent-cyan);
        font-weight: 600;
    }

    .skills-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
    }

    .skill-category {
        background: var(--surface-color);
        border: 2px solid var(--border-color);
        padding: 1.5rem;
        border-radius: 4px;
        transition: all 0.3s ease;
    }

    .skill-category:hover {
        border-color: var(--accent-cyan);
    }

    .skill-category-title {
        font-family: 'Orbitron', monospace;
        font-size: 1.1rem;
        color: var(--accent-cyan);
        margin-bottom: 1rem;
        text-transform: capitalize;
    }

    .skill-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .skill-tag {
        background: var(--bg-primary);
        border: 1px solid var(--border-color);
        padding: 0.25rem 0.75rem;
        border-radius: 2px;
        font-size: 0.85rem;
        color: var(--text-secondary);
        transition: all 0.3s ease;
    }

    .skill-tag:hover {
        border-color: var(--accent-cyan);
        color: var(--accent-cyan);
    }

    .language-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: var(--surface-color);
        border: 2px solid var(--border-color);
        padding: 1rem 1.5rem;
        border-radius: 4px;
        transition: all 0.3s ease;
    }

    .language-item:hover {
        border-color: var(--accent-cyan);
    }

    .language-name {
        font-weight: 600;
        color: var(--text-primary);
    }

    .language-level {
        color: var(--accent-cyan);
        font-size: 0.9rem;
    }

    @media (max-width: 768px) {
        .container {
            padding: 1rem;
        }

        .hero-title {
            font-size: 2rem;
        }

        .section-title {
            font-size: 1.5rem;
        }

        .job-meta,
        .education-meta {
            flex-direction: column;
            gap: 0.5rem;
        }

        .skills-grid {
            grid-template-columns: 1fr;
        }
    }
</style>
