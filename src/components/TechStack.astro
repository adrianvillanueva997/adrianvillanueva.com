---
import { Icon } from 'astro-icon/components';

interface Props {
    technologies: string[];
    showLabels?: boolean;
}

const { technologies, showLabels = true } = Astro.props;

// Map technology names to Simple Icons (mdi or simple-icons)
const techIcons: Record<string, string> = {
    // Frontend
    React: 'simple-icons:react',
    'Next.js': 'simple-icons:nextdotjs',
    TypeScript: 'simple-icons:typescript',
    JavaScript: 'simple-icons:javascript',
    Tailwind: 'simple-icons:tailwindcss',
    'Tailwind CSS': 'simple-icons:tailwindcss',

    // Backend
    Prisma: 'simple-icons:prisma',
    'Node.js': 'simple-icons:nodedotjs',
    Python: 'simple-icons:python',
    Rust: 'simple-icons:rust',
    Go: 'simple-icons:go',
    Django: 'simple-icons:django',
    FastAPI: 'simple-icons:fastapi',
    Flask: 'simple-icons:flask',

    // Databases
    PostgreSQL: 'simple-icons:postgresql',
    MongoDB: 'simple-icons:mongodb',
    Redis: 'simple-icons:redis',
    GraphQL: 'simple-icons:graphql',

    // DevOps & Cloud
    Git: 'simple-icons:git',
    Docker: 'simple-icons:docker',
    Kubernetes: 'simple-icons:kubernetes',
    GCP: 'simple-icons:googlecloud',
    Terraform: 'simple-icons:terraform',
    Vercel: 'simple-icons:vercel',

    // Additional common techs
    Astro: 'simple-icons:astro',
    Vue: 'simple-icons:vuedotjs',
    Svelte: 'simple-icons:svelte',
    Angular: 'simple-icons:angular',
    AWS: 'simple-icons:amazonaws',
    Azure: 'simple-icons:microsoftazure',
    Linux: 'simple-icons:linux',
    MySQL: 'simple-icons:mysql',
};

// Process the tech names to handle case variations
const processedTechs = technologies.map((tech) => {
    // Find a case-insensitive match in our icons
    const key =
        Object.keys(techIcons).find(
            (iconKey) => iconKey.toLowerCase() === tech.toLowerCase()
        ) || tech;

    return {
        name: tech,
        iconKey: key,
        hasIcon: !!techIcons[key],
        icon: techIcons[key],
    };
});
---

<div class="tech-stack">
    {
        processedTechs.map(({ name, hasIcon, icon }) => (
            <span class="tech-item">
                {hasIcon && <Icon name={icon} class="tech-icon" />}
                {showLabels && <span class="tech-name">{name}</span>}
            </span>
        ))
    }
</div>

<style>
    .tech-stack {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
        margin: 1.5rem 0;
    }

    .tech-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background: var(--bg-secondary);
        border: 3px solid var(--accent-cyan);
        color: var(--text-primary);
        font-family: 'Courier New', monospace;
        font-weight: 700;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        transition: all 0.2s ease;
        cursor: default;
        box-shadow: 0 0 10px rgba(0, 255, 255, 0.2);
        position: relative;
    }

    .tech-item::before {
        content: '';
        position: absolute;
        inset: 0;
        border: 1px solid var(--accent-cyan);
        opacity: 0.3;
        pointer-events: none;
    }

    .tech-item:hover {
        background: var(--accent-crimson);
        border-color: var(--accent-crimson);
        color: var(--bg-primary);
        box-shadow:
            0 0 20px rgba(220, 20, 60, 0.4),
            0 0 30px rgba(220, 20, 60, 0.2);
        transform: translateY(-2px);
    }

    .tech-item:hover::before {
        border-color: var(--accent-crimson);
    }

    .tech-icon {
        width: 1rem;
        height: 1rem;
        flex-shrink: 0;
        filter: drop-shadow(0 0 4px currentColor);
    }

    .tech-name {
        white-space: nowrap;
    }

    /* Responsive */
    @media (max-width: 480px) {
        .tech-stack {
            gap: 0.5rem;
        }

        .tech-item {
            padding: 0.375rem 0.75rem;
            font-size: 0.75rem;
        }

        .tech-icon {
            width: 0.875rem;
            height: 0.875rem;
        }
    }
</style>
