---
import type { ImageMetadata } from 'astro';
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import FallbackImage from '@/assets/logo.png';
import {
	PLAUSIBLE_DOMAIN,
	PLAUSIBLE_SCRIPT_URL,
	SITE_AUTHOR,
	SITE_KEYWORDS,
	SITE_TITLE,
	SITE_URL,
} from '@/consts';
import '@/styles/global.css';

interface Props {
	title: string;
	description: string;
	image?: ImageMetadata;
	keywords?: string[];
	article?: {
		publishedTime?: string;
		modifiedTime?: string;
		author?: string;
		tags?: string[];
	};
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
	title,
	description,
	image = FallbackImage,
	keywords = SITE_KEYWORDS,
	article,
} = Astro.props;

// Create full title for non-homepage
const fullTitle =
	Astro.url.pathname === '/' ? title : `${title} | ${SITE_TITLE}`;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="theme-color" content="#000000" />

<!-- Favicons -->
<link rel="icon" type="image/svg+xml" href="/static/favicons/favicon.svg" />
<link
	rel="icon"
	type="image/png"
	sizes="32x32"
	href="/static/favicons/favicon-32x32.png"
/>
<link
	rel="icon"
	type="image/png"
	sizes="16x16"
	href="/static/favicons/favicon-16x16.png"
/>
<link
	rel="apple-touch-icon"
	sizes="180x180"
	href="/static/favicons/apple-touch-icon.png"
/>
<link rel="manifest" href="/static/favicons/site.webmanifest" />

<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link
	rel="preload"
	href="/fonts/atkinson-regular.woff"
	as="font"
	type="font/woff"
	crossorigin
/>
<link
	rel="preload"
	href="/fonts/atkinson-bold.woff"
	as="font"
	type="font/woff"
	crossorigin
/>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />
<meta name="author" content={SITE_AUTHOR} />
<meta name="keywords" content={keywords.join(', ')} />

<!-- Robots -->
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={article ? 'article' : 'website'} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image.src, Astro.url)} />
<meta property="og:site_name" content={SITE_TITLE} />
<meta property="og:locale" content="en_US" />

{
	article && (
		<>
			<meta
				property="article:published_time"
				content={article.publishedTime}
			/>
			{article.modifiedTime && (
				<meta
					property="article:modified_time"
					content={article.modifiedTime}
				/>
			)}
			{article.author && (
				<meta property="article:author" content={article.author} />
			)}
			{article.tags &&
				article.tags.map((tag) => (
					<meta property="article:tag" content={tag} />
				))}
		</>
	)
}

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:url" content={Astro.url} />
<meta name="twitter:title" content={fullTitle} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(image.src, Astro.url)} />
<meta name="twitter:creator" content="@adrianv5x" />
<meta name="twitter:site" content="@adrianv5x" />

<!-- Additional SEO -->
<meta name="format-detection" content="telephone=no" />
<meta name="geo.region" content="JP-13" />
<meta name="geo.placename" content="Tokyo" />

<!-- JSON-LD Structured Data -->
<script
	type="application/ld+json"
	set:html={JSON.stringify({
		'@context': 'https://schema.org',
		'@type': article ? 'BlogPosting' : 'WebSite',
		'@id': canonicalURL.href,
		url: canonicalURL.href,
		name: fullTitle,
		description: description,
		author: {
			'@type': 'Person',
			name: SITE_AUTHOR,
			url: SITE_URL,
		},
		...(article
			? {
					headline: title,
					datePublished: article.publishedTime,
					dateModified: article.modifiedTime || article.publishedTime,
					image: new URL(image.src, Astro.url).href,
					keywords: article.tags?.join(', '),
				}
			: {
					publisher: {
						'@type': 'Person',
						name: SITE_AUTHOR,
					},
				}),
	})}
/>

<!-- Plausible Analytics -->
<script defer data-domain={PLAUSIBLE_DOMAIN} src={PLAUSIBLE_SCRIPT_URL}
></script>
<script is:inline>
	window.plausible =
		window.plausible ||
		function () {
			(window.plausible.q = window.plausible.q || []).push(arguments);
		};
</script>
